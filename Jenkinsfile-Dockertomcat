pipeline {
    agent any
    tools {
        maven 'maven3.8.8'
    }
    environment {
        GITHUB_REP = 'https://github.com/WaleJohnson/maven-web-app.git'
        DEPLOY_ENV = 'staging tomcat'
    }
    stages {
        stage('Clone from Github') {
            steps {
                echo "cloning from Github"
                git "${GITHUB_REP}"
                echo "cloning done"
            }
        }
        stage('Approval to build artifact') {
            steps {
                echo "Sending to team lead for approval to build Artifact"
                echo "Sending email notification to team lead"
                timeout(time: 4, unit: "DAYS") {
                    input message: 'Approve to Build Artifact'
                }
            }
        }
        stage('Build with Maven') {
            steps {
                echo "Building with Maven"
                sh 'mvn package'
                echo "Build completed"
            }
        }
        stage('Test with Sonarqube') {
            steps {
                echo "Testing started"
                sh 'mvn sonar:sonar'
                echo "Test done"
            }
        }
        stage('Approval to build docker image') {
            steps {
                echo "Sending to team lead for approval"
                echo "Sending email notification to team lead"
                timeout(time: 4, unit: "DAYS") {
                    input message: 'Approve to deploy to staging'
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                echo "Building docker image"
                sh 'docker build -t waleapp:1.0 .'
                echo "Docker Image Built"
            }
        }
        stage('View Docker Images') {
            steps {
                echo "Viewing docker images"
                sh 'docker images'
                echo "Docker Image viewing complete"
            }
        }
        stage("Run Image and deploy to ${env.DEPLOY_ENV}") {
            steps {
                echo "Running docker image"
                sh 'docker rm -f waleapp'
                sh 'docker run --name waleapp -d -p 8030:8080 waleapp:1.0'
                sh 'docker ps'
                echo "Container running"
            }
        }
    }
    post {
        always {
            echo "I am done"
        }
        success {
            echo "Deploying to ${env.DEPLOY_ENV} successful"
            emailext (
                subject: "Pipeline Successful: ${currentBuild.fullDisplayName}",
                body: "The pipeline has succeeded.",
                to: "walejohnsonn@gmail.com"
            )
        }
        failure {
            echo "Deploying to ${env.DEPLOY_ENV} failed"
            emailext (
                subject: "Pipeline Failed: ${currentBuild.fullDisplayName}",
                body: "The pipeline has failed. Please investigate.",
                to: "walejohnsonn@gmail.com"
            )
        }
    }
}
